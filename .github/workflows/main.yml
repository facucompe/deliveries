# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: PR
        uses: 8BitJonny/gh-get-current-pr@2.1.1
        with:
          github-token: ${{ github.token }}
          sha: ${{ github.event.pull_request.head.sha }}
      
      - run: echo "PR ${prNumber} ${prTitle} at ${prUrl} is ${prJSON}"
        if: steps.PR.outcome == 'success'
        env:
          # JSON object with the full PR object
          # toJSON(fromJSON(...pr)) parses it into memory and then format is with pretty-print.
          prJSON: ${{ toJSON(fromJSON(steps.current_pr.outputs.pr)) }}
          # Direct access to common PR properties
          prNumber: ${{ steps.PR.outputs.number }}
          prUrl: ${{ steps.PR.outputs.pr_url }}
          prTitle: ${{ steps.PR.outputs.pr_title }}

      - run: echo "variable de github action ${{ github.event.pull_request.title }}"
      
      - name: Deploy Stage
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.SLACK_WEBHOOK_URL}}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"text": "PR a master"}'
